c) Given an array of integers representing the elevation of a roof structure at
various positions, each position is separated by a unit length, Write a program
to determine the amount of water that will be trapped on the roof after heavy
Rainfall


def trap_water(elevation):
    n = len(elevation)
    
    if n <= 2:
        return 0  # No water can be trapped with less than 3 positions
    
    left_max = [0] * n
    right_max = [0] * n
    
    left_max[0] = elevation[0]
    for i in range(1, n):
        left_max[i] = max(left_max[i-1], elevation[i])
    
    right_max[n-1] = elevation[n-1]
    for i in range(n-2, -1, -1):
        right_max[i] = max(right_max[i+1], elevation[i])
    
    trapped_water = 0
    for i in range(n):
        trapped_water += max(0, min(left_max[i], right_max[i]) - elevation[i])
    
    return trapped_water

# Example usage:
elevation = [2, 1, 3, 0, 1, 2, 3]
result = trap_water(elevation)

print(f"Amount of water trapped: {result} units")


Approach: 

1. Input Validation:
  First we  Return 0 if the length of the elevation array is less than 3.

2. Initialize Max Arrays:
   We Create `left_max` and `right_max` arrays.

3. Calculate Maximums:
 we   Iterate both left and right to find maximum elevations.

4. Calculate Trapped Water:
   Iterate through the elevation array, calculating trapped water at each position.

5. Return Result:
     Return the total trapped water.

6. Example Usage:
   Call `trap_water` on an example elevation array and print the result.


Source : from web , geeksforgeeks

