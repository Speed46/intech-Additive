def string_compression(s):
    if not s:
        return s

    compressed = []                                                                
    count = 1

    for i in range(1, len(s)):
        if s[i] == s[i - 1]:
            count += 1
        else:
            compressed.append(s[i - 1] + str(count))
            count = 1

    compressed.append(s[-1] + str(count))

    compressed_str = ''.join(compressed)

    # Bonus 1: Second compressor
    return second_compressor(compressed_str)

def second_compressor(s):
    result = []
    count = 1

    for i in range(1, len(s)):
        if s[i] == s[i - 1]:
            count += 1
        else:
            result.append(s[i - 1] + (str(count) if count > 1 else ''))
            count = 1

    result.append(s[-1] + (str(count) if count > 1 else ''))

    return ''.join(result)

def decompress(s):
    result = []
    i = 0

    while i < len(s):
        char = s[i]
        i += 1
        count_str = ""

        while i < len(s) and s[i].isdigit():
            count_str += s[i]
            i += 1

        count = int(count_str) if count_str else 1
        result.append(char * count)

    return ''.join(result)

# Example usage
original_str = 'aabcccccaaa'
compressed_str = string_compression(original_str)
print("Compressed:", compressed_str)

# Decompression
decompressed_str = decompress(compressed_str)
print("Decompressed:", decompressed_str)


Source : from web , geeksforgeeks




